from typing import Any, TypedDict, List, Optional


class MwebExperiment(TypedDict):
    owner: str
    variant: str
    experiment_id: int


class Features(TypedDict):
    modmail_harassment_filter: bool
    mod_service_mute_writes: bool
    promoted_trend_blanks: bool
    show_amp_link: bool
    chat: bool
    is_email_permission_required: bool
    mod_awards: bool
    mweb_xpromo_revamp_v3: MwebExperiment
    mweb_xpromo_revamp_v2: MwebExperiment
    awards_on_streams: bool
    mweb_xpromo_modal_listing_click_daily_dismissible_ios: bool
    chat_subreddit: bool
    cookie_consent_banner: bool
    modlog_copyright_removal: bool
    do_not_track: bool
    images_in_comments: bool
    mod_service_mute_reads: bool
    chat_user_settings: bool
    use_pref_account_deployment: bool
    mweb_xpromo_interstitial_comments_ios: bool
    mweb_sharing_clipboard: MwebExperiment
    premium_subscriptions_table: bool
    mweb_xpromo_interstitial_comments_android: bool
    crowd_control_for_post: bool
    mweb_xpromo_modal_listing_click_daily_dismissible_android: bool
    chat_group_rollout: bool
    resized_styles_images: bool
    noreferrer_to_noopener: bool
    expensive_coins_package: bool


class SubredditInfo(TypedDict):
    default_set: bool
    user_is_contributor: bool
    banner_img: str
    restrict_posting: bool
    user_is_banned: bool
    free_form_reports: bool
    community_icon: Optional[str]
    show_media: bool
    icon_color: str
    user_is_muted: Optional[bool]
    display_name: str
    header_img: Optional[str]
    title: str
    coins: int
    previous_names: List[str]
    over_18: bool
    icon_size: List[int]
    primary_color: str
    icon_img: str
    description: str
    allowed_media_in_comments: List[Any]
    submit_link_label: str
    header_size: Optional[List[int]]
    restrict_commenting: bool
    subscribers: int
    submit_text_label: str
    is_default_icon: bool
    link_flair_position: str
    display_name_prefixed: str
    key_color: str
    name: str
    is_default_banner: bool
    url: str
    quarantine: bool
    banner_size: Optional[List[int]]
    user_is_moderator: bool
    accept_followers: bool
    public_description: str
    link_flair_enabled: bool
    disable_contributor_requests: bool
    subreddit_type: str
    user_is_subscriber: bool


class RedditUser(TypedDict):
    is_employee: bool
    seen_layout_switch: bool
    has_visited_new_profile: bool
    pref_no_profanity: bool
    has_external_account: bool
    pref_geopopular: str
    seen_redesign_modal: bool
    pref_show_trending: bool
    subreddit: SubredditInfo
    pref_show_presence: bool
    snoovatar_img: str
    snoovatar_size: Optional[List[int]]
    gold_expiration: Optional[str]
    has_gold_subscription: bool
    is_sponsor: bool
    num_friends: int
    features: Features
    can_edit_name: bool
    verified: bool
    pref_autoplay: bool
    coins: int
    has_paypal_subscription: bool
    has_subscribed_to_premium: bool
    id: str
    has_stripe_subscription: bool
    oauth_client_id: str
    can_create_subreddit: bool
    over_18: bool
    is_gold: bool
    is_mod: bool
    awarder_karma: int
    suspension_expiration_utc: Optional[float]
    has_verified_email: bool
    is_suspended: bool
    pref_video_autoplay: bool
    has_android_subscription: bool
    in_redesign_beta: bool
    icon_img: str
    pref_nightmode: bool
    awardee_karma: int
    hide_from_robots: bool
    password_set: bool
    link_karma: int
    force_password_reset: bool
    total_karma: int
    seen_give_award_tooltip: bool
    inbox_count: int
    seen_premium_adblock_modal: bool
    pref_top_karma_subreddits: bool
    pref_show_snoovatar: bool
    name: str
    pref_clickgadget: int
    created: float
    gold_creddits: int
    created_utc: float
    has_ios_subscription: bool
    pref_show_twitter: bool
    in_beta: bool
    comment_karma: int
    accept_followers: bool
    has_subscribed: bool
    linked_identities: List[str]
    seen_subreddit_chat_ftux: bool